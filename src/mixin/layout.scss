@import 'common';
@import 'media';

/// --------------------------------------------------
/// Container
/// --------------------------------------------------

// @include make-container;
@mixin make-container($breakpoint-name:'') {
  $name: #{$breakpoint-name}container;
  $breakpoint-key: str-replace($breakpoint-name, '-', '');
  $breakpoint-value: breakpoint-value($breakpoint-key);
  %#{$name}{ @include clear; }
  .#{$name} { 
    max-width: $breakpoint-value; margin-right: auto; margin-left: auto; 
    &:after{ @extend %#{$name}; }
    &-fluid {
      max-width: none;
      &:after{ @extend %#{$name}; }
    }
  }
}



/// --------------------------------------------------
/// Gutter
/// --------------------------------------------------

// @include make-gutter;
@mixin make-gutter($breakpoint-name:'', $start:1, $end:6, $increase:5) {
  .#{$breakpoint-name}gutter {
    @for $i from $start through $end {
      $num: $i * $increase;
      $_1of2: $num / 2;
      &-#{$num} { margin: - ($_1of2 * 1px); }
    }
  }
}

// @include make-grid-gutter;
@mixin make-grid-gutter($grid, $prop, $breakpoint-name:'', $start:1, $end:6, $increase:5) {
  .#{$breakpoint-name}gutter {
    @for $i from $start through $end {
      $num: $i * $increase;
      $_1of2: $num / 2;
      &-#{$num}.#{$grid}s { 
        #{$prop}: calc(100% + #{$num * 1px}); 
      }
      &-#{$num}.#{$grid}s>.#{$grid} { padding: ($_1of2 * 1px); }
    }
  }
}



/// --------------------------------------------------
/// Grid
/// --------------------------------------------------

// @include make-grids;
@mixin make-grids($grid, $prop, $breakpoint-name:'', $start:1, $end:12) {
  .#{$breakpoint-name}#{$grid}s { 
    overflow: hidden; #{$prop}: 100%;
    &:after { @include clear; }
  }
  @include make-grid($grid, $prop, $breakpoint-name, $start, $end);
  @include make-grid-count($grid, $prop, $breakpoint-name, $start, $end);
}

@mixin make-grid($grid, $prop, $breakpoint-name:'', $start:1, $end:12) {
  $name: #{$breakpoint-name}#{$grid};
  %#{$name} { display: block; float: left; min-width: 1px; min-height: 1px; }
  .#{$name} { @extend %#{$name}; }
  @for $i from $start through $end {
    .#{$name}-#{$i} { 
      @extend %#{$name}; 
      #{$prop}: (100% / $end * $i); 
      #{$prop}: calc(100% / #{$end} * #{$i}); 
    }
  }
}

@mixin make-grid-count($grid, $prop, $breakpoint-name:'', $start:1, $end:12) {
  $name: #{$breakpoint-name}#{$grid};
  @for $i from $start through $end {
    .#{$name}-count-#{$i} > .#{$name} { 
      #{$prop}: (100% / $i); 
      #{$prop}: calc(100% / #{$i}); 
    }
    .#{$name}-count-#{$i} > .#{$name}:nth-child(n) { clear: none; }
    .#{$name}-count-#{$i} > .#{$name}:nth-child(#{$i}n+1) { clear: both; }
  }
}



/// --------------------------------------------------
/// Order
/// --------------------------------------------------

// @include make-orders;
@mixin make-orders($breakpoint-name:'', $start:1, $end:12) {
  .#{$breakpoint-name}orders { display: flex; flex-wrap: wrap; flex-direction: row; }
  @for $i from $start through $end {
    .#{$breakpoint-name}order-#{$i} { order: $i; }
  }
}
